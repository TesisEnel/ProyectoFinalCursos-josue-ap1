@page "/Compra/{CursoId:int}"
@*@attribute [Authorize]*@
@using Microsoft.AspNetCore.Authorization;
@using ProyectoCursos.Client.Sesion;
@using ProyectoCursos.Shared;
@inject HttpClient httpClient
@inject NotificationService notificationService
@inject IUsuarioAutenticadoService usuarioAutenticadoService


<PageTitle>RussoCursos</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header">
            @*Imagen*@
            <div class="mb-3">
                @if (Curso?.RutaImagen != null)
                {
                    var base64 = Convert.ToBase64String(Curso.RutaImagen);
                    var imgSrc = $"data:image/jpeg;base64,{base64}";
                    <img src="@imgSrc" alt="Imagen del curso" class="item-imagen" />
                }
            </div>
            <h3>@Curso?.NombreCurso - @Categorias?.CategoriaNombre </h3>
        </div>
        <div class=card-body>

            @*Descripcion*@
            <div class="mb-3">
                <label class="form-label">@Curso?.Descripcion</label>
            </div>

            @*Fecha inicio*@
            <div Class="form-group mb-3 margen">
                <label class="row-text"> @Curso?.FechaAlta.ToString("dd/MM/yyyy") </label>
            </div>

            @*Fecha fin*@
            <div Class="form-group mb-3">
                <label class="row-text">@Curso?.FechaBaja.ToString("dd/MM/yyyy") </label>
            </div>

            @*Programa*@
            <div class="form-group mb-3">
                <label class="form-label">@Curso?.Programa</label>
            </div>

            @*Precio*@
            <div class="form-group mb-3">
                <label class="form-label">@Curso?.Precio.ToString("0.00")</label>
                <button type="button" class="btn btn-outline-primary" @onclick="AgregarAlCarrito">Añadir al Carrito <i class="oi oi-cart" /></button>
            </div>

        </div>
    </div>
</div>

@code {
    [Parameter]
    public int CursoId { get; set; }
    public int UsuarioId { get; set; }
    public Cursos Curso { get; set; }
    public Compras Compra { get; set; } = new Compras();
    public Usuarios? user { get; set; }
    public Categorias? Categorias { get; set; }


    override protected async Task OnInitializedAsync()
    {
        try
        {
            user = usuarioAutenticadoService.Usuario;
            var resultado = await httpClient.GetFromJsonAsync<Cursos>($"api/Cursos/{CursoId}");
            var categoria = await httpClient.GetFromJsonAsync<Categorias>($"api/Categoria/{resultado.Categorias}");
            if (resultado != null)
            {
                Categorias = categoria;
                Curso = resultado;
            }

        }
        catch (Exception ex)
        {
            notificationService.ShowNotification(
                 titulo: "Error de búsqueda",
                mensaje: "Registro no encontrado" + ex.Message,
                NotificationSeverity.Error
            );
        }
    }

    private async Task AgregarAlCarrito()
    {
        if (user == null)
        {
            notificationService.ShowNotification(
                titulo: "Error",
                mensaje: "Debes iniciar sesión para comprar",
                NotificationSeverity.Error
            );
            return;
        }

        if (Curso == null)
        {
            notificationService.ShowNotification(
                titulo: "Error",
                mensaje: "No se puede agregar al carrito.",
                NotificationSeverity.Error
            );
            return;
        }

        // Verificar si el usuario ya ha comprado el curso
        if (user.Compras.Any(compra => compra.CursoId == Curso.CursoId))
        {
            notificationService.ShowNotification(
                titulo: "Advertencia",
                mensaje: "Ya has comprado este curso previamente.",
                NotificationSeverity.Warning
            );
            return;
        }

        Compra.UsuarioId = user.UsuarioId;
        Compra.CursoId = Curso.CursoId;
        user.Compras.Add(Compra);
        usuarioAutenticadoService.AgregarCursoAlCarrito(Curso);

        notificationService.ShowNotification(
            titulo: "Agregado al carrito",
            mensaje: $"{Curso.NombreCurso} ha sido agregado al carrito.",
            NotificationSeverity.Success
        );
    }

}
