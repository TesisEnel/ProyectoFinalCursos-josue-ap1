@page "/Compra/{CursoId:int}"
@using Microsoft.AspNetCore.Authorization;
@using ProyectoCursos.Client.Sesion;
@using ProyectoCursos.Shared;
@inject HttpClient httpClient
@inject NotificationService notificationService
@inject IUsuarioAutenticadoService usuarioAutenticadoService

<PageTitle>RussoCursos</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header">
            @*Imagen*@
            <div class="mb-3">
                @if (Curso?.RutaImagen != null)
                {
                    var base64 = Convert.ToBase64String(Curso.RutaImagen);
                    var imgSrc = $"data:image/jpeg;base64,{base64}";
                    <img src="@imgSrc" alt="Imagen del curso" class="item-imagen" />
                }
            </div>
            <h3>@Curso?.NombreCurso</h3>
        </div>
        <div class=card-body>

            @*Descripcion*@
            <div class="mb-3">
                <label class="form-label">@Curso?.Descripcion</label>
            </div>

            @*Fecha inicio*@
            <div Class="form-group mb-3 margen">
                <label class="row-text"> @Curso?.FechaAlta.ToString("dd/MM/yyyy") </label>
            </div>

            @*Fecha fin*@
            <div Class="form-group mb-3">
                <label class="row-text">@Curso?.FechaBaja.ToString("dd/MM/yyyy") </label>
            </div>

            @*Programa*@
            <div class="form-group mb-3">
                <label class="form-label">@Curso?.Programa</label>
            </div>

            @*Categoria*@
           @* <div class="form-group mb-3">
                <label class="form-label">@Curso?.</label>
            </div>*@

            @*Precio*@
            <div class="form-group mb-3">
                <label class="form-label">@Curso?.Precio</label>
                <button type="button" class="btn btn-outline-primary" @onclick="() => Guardar()">Comprar <i class="oi oi-cart" /></button>
            </div>

        </div>
    </div>
</div>

@code {
    [Parameter]
    public int CursoId { get; set; }
    public int UsuarioId { get; set; }
    public Cursos? Curso { get; set; }
    public Carrito Compra { get; set; } = new Carrito();
    public Usuarios? user { get; set; }
    public Categorias? Categorias { get; set; }

    override protected async Task OnInitializedAsync()
    {

        user = usuarioAutenticadoService.Usuario;
        var resultado = await httpClient.GetFromJsonAsync<Cursos>($"api/Cursos/{CursoId}");
        //var categoria = await httpClient.GetFromJsonAsync<Categorias>($"api/Categorias/{resultado.Categoria}");
        if (resultado != null)
        {
            //Categorias = categoria;
            Curso = resultado;
        }
    }

    public async Task Guardar()
    {

        if (user == null || Curso == null)
        {
            notificationService.ShowNotification(
               titulo: "Error",
               mensaje: "Tiene que estar logeado para comprar",
               NotificationSeverity.Error
           );
            return;
        }

        Compra.UsuarioId = user.UsuarioId;
        Compra.CursoId = Curso.CursoId;
        usuarioAutenticadoService.Usuario.Carrito.Add(Compra);

    }

}