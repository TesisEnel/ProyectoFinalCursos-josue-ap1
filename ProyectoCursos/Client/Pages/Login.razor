@page "/"
@layout LoginLayout
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@using ProyectoCursos.Client.Sesion;
@using ProyectoCursos.Shared
@inject IUsuarioAutenticadoService usuarioAutenticadoService
@using ProyectoCursos.Client.Notificaciones;
@inject NotificationService notificationService

<PageTitle>RussoCursos</PageTitle>


<div class="container mt-4 ">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title text-center">Inicio de sesión</h3>

                        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                            <DataAnnotationsValidator />

                            <div class="form-group mb-3">
                                <label for="Email">Email:</label>
                                <InputText class="form-control" id="Email" @bind-Value="loginModel.Email" />
                                <ValidationMessage For="@(() => loginModel.Email)" />
                            </div>

                            <div class="form-group">
                                <label for="Password">Contraseña:</label>
                                <InputText type="password" class="form-control" id="Password" @bind-Value="loginModel.Password" />
                                <ValidationMessage For="@(() => loginModel.Password)" />
                            </div>

                            <div class="mb-3"></div>

                            <div class="text-center">
                                <button type="submit" @onclick="@HandleLogin" class="btn btn-primary">Iniciar Sesión</button>
                                <button type="submit" @onclick="@RegistroNagate" class="btn btn-link">Registro</button>
                            </div>
                            @if (!string.IsNullOrEmpty(errorMessage))
                            {
                                <p class="text-danger text-center mt-3">@errorMessage</p>


                            }
                        </EditForm>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    public Usuarios loginModel { get; set; } = new Usuarios();
    private string errorMessage = string.Empty;

    private void RegistroNagate()
    {
        NavigationManager.NavigateTo("/UsuariosR");
    }

    private async Task HandleLogin()
    {
        try
        {
            var response = await httpClient.PostAsJsonAsync("api/Usuario/AuthenticateUser", loginModel);

            if (response.IsSuccessStatusCode)
            {
                var usuarioAutenticado = await response.Content.ReadFromJsonAsync<Usuarios>();
                usuarioAutenticadoService.Usuario = usuarioAutenticado;
                NavigationManager.NavigateTo("/Index");
            }
            else
            {
                errorMessage = "Credenciales inválidas. Por favor, verifica tu email y contraseña.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Ocurrió un error al intentar iniciar sesión: " + ex.Message;
        }
    }
}
