@page "/"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@using ProyectoCursos.Client.Sesion;
@using ProyectoCursos.Shared
@inject IUsuarioAutenticadoService usuarioAutenticadoService
@using ProyectoCursos.Client.Notificaciones;
@inject NotificationService notificationService

<PageTitle>RussoCursos</PageTitle>

<h3>Página de inicio de sesión</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="Email">Email:</label>
        <InputText class="form-control" id="Email" @bind-Value="loginModel.Email" />
        <ValidationMessage For="@(() => loginModel.Email)" />
    </div>

    <div class="form-group">
        <label for="Password">Contraseña:</label>
        <InputText type="password" class="form-control" id="Password" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <div class="card-footer d-flex justify-content-center">
        <div class="btn-group">
            <button type="submit" @onclick="@HandleLogin" class="btn btn-primary">Iniciar Sesión</button>
            <button type="submit" @onclick="@RegistroNagate" class="btn btn-primary">Registro</button>
        </div>
    </div>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

@code {
    public Usuarios loginModel { get; set; } = new Usuarios();
    private string errorMessage = string.Empty;

    private void RegistroNagate()
    {
        NavigationManager.NavigateTo("/Usuarios");
    }
   
    
    private async Task HandleLogin()
    {
        try
        {
            var response = await httpClient.PostAsJsonAsync("api/Usuario/AuthenticateUser", loginModel);

            if (response.IsSuccessStatusCode)
            {
                var usuarioAutenticado = await response.Content.ReadFromJsonAsync<Usuarios>();
                usuarioAutenticadoService.Usuario = usuarioAutenticado;
                NavigationManager.NavigateTo("/Index");
            }
            else
            {
                errorMessage = "Credenciales inválidas. Por favor, verifica tu email y contraseña.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Ocurrió un error al intentar iniciar sesión: " + ex.Message;
        }
    }

}