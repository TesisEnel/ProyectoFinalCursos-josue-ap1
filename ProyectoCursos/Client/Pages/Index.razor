
@page "/Index"
@using ProyectoCursos.Client.Sesion
@inject HttpClient httpClient
@inject NavigationManager navManager
@inject IUsuarioAutenticadoService usuarioAutenticadoService
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using ProyectoCursos.Shared
@using System.Text.Json;

<PageTitle>RussoCursos</PageTitle>

<div class="catalagos">
    @foreach (var item in Cursos)
    {
        <div class="card col-3 item-card" @onclick="@(() => Navegar(item.CursoId))">
            <div class="img-container">
                @if (item.RutaImagen != null)
                {
                    var base64 = Convert.ToBase64String(item.RutaImagen);
                    var imgSrc = $"data:image/jpeg;base64,{base64}";
                    <img src="@imgSrc" alt="Imagen del curso" class="item-imagen" />
                }
            </div>
            <div class="card-body">
                @item.NombreCurso
                @item.FechaAlta.ToString("dd/MM/yyyy")
                @item.FechaBaja.ToString("dd/MM/yyyy")
            </div>
        </div>
    }
</div>

@code {
    public List<Cursos>? Cursos { get; set; } = new List<Cursos>();

    override protected async Task OnInitializedAsync()
    {
        // Recuperar información de usuario desde localStorage
        var userJson = await jsRuntime.InvokeAsync<string>("localStorage.getItem", "user");
        if (!string.IsNullOrEmpty(userJson))
        {
            usuarioAutenticadoService.Usuario = JsonSerializer.Deserialize<Usuarios>(userJson, new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true
                });
        }

        Cursos = await httpClient.GetFromJsonAsync<List<Cursos>>("api/Cursos");
    }

    [Inject] IJSRuntime jsRuntime { get; set; }

    public void Navegar(int id)
    {
        navManager.NavigateTo($"/Compra/{id}");
    }
}
