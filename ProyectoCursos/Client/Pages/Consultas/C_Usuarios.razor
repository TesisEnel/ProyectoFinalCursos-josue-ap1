@page "/ConsultaUsuarios"
@inject HttpClient httpClient
@using System.Linq

<div class="card">
    <div class="card">

        <div class="card-header">
            <h3> Consulta de Usuarios </h3>
        </div>

        <div class="card-body">

            <form>
                <div class="input-group d-flex align-items-end">

                    <InputSelect class="form-control col-2" @bind-Value="filtro">
                        <option value="1">UsuarioId</option>
                        <option value="2">NombreCompleto</option>
                        <option value="3">NombreUsuario</option>
                        <option value="4">Email</option>
                        <option value="6">Rol</option>

                    </InputSelect>


                    <div class="flex-fill mx-2">

                        <div class="input-group">
                            <label class="input-group-text"> Busqueda </label>
                            <InputText class="form-control" @bind-Value="Criterio" />
                        </div>

                    </div>

                    <button type="button" class="btn btn-sm-10 btn-primary" @onclick="Buscar"> <span class="oi oi-magnifying-glass"></span> Buscar </button>
                </div>
            </form>

        </div>
        @if (Usuarios is not null)
        {
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>UsuarioId</th>
                        <th>Nombre Completo</th>
                        <th>Nombre de Usuario</th>
                        <th>Email</th>
                        <th>Password</th>
                        <th>Rol</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Usuarios)
                    {
                        <tr>
                            <td>@item.UsuarioId</td>
                            <td>@item.NombreCompleto</td>
                            <td>@item.NombreUsuario</td>
                            <td>@item.Email</td>
                            <td>@item.Password</td>
                            <td>@GetRolNombre(item.Rol)</td> 
                            <td><a href="Usuarios/@item.UsuarioId">Ver</a></td>
                        </tr>
                    }

                </tbody>

            </table>
        }
    </div>
    <div class="card-footer">
        <div class="form-row justify-content-sm-between" aria-orientation="vertical">
            <div class="col-3">
                <label for="CantidaRegistro" class="col-form-label"><strong>Filas</strong>&nbsp;</label>
                <input id="CantidaRegistro" @bind-value="@conteo" disabled class="form-control" />
            </div>
        </div>
    </div>
</div>

@code {

    public List<Usuarios>? Usuarios { get; set; }
    public int conteo { get; set; }
    public string? filtro { get; set; }
    public string? Criterio { get; set; }
    public List<Roles>? Roles { get; set; } = new List<Roles>();


    protected override async Task OnInitializedAsync()
    {
        await BuscarRoles();
    }

    public string GetRolNombre(int rolId)
    {
        var rol = Roles.FirstOrDefault(r => r.RolId == rolId);
        return rol != null ? rol.NombreRol : "Rol desconocido";
    }

    public async Task BuscarRoles()
    {
        Roles = await httpClient.GetFromJsonAsync<List<Roles>>("api/Usuario/GetRoles");
    }

    

    public async Task Buscar()
    {
        Usuarios = await httpClient.GetFromJsonAsync<List<Usuarios>>($"api/Usuario");

        conteo = Usuarios != null ? Usuarios!.Count() : 0;
        StateHasChanged();
    }

}

