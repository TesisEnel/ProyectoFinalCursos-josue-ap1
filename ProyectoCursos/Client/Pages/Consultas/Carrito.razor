@page "/CarritoCompra"
@page "/CarritoCompra/{CompraId:int}"
@using ProyectoCursos.Client.Sesion;
@inject IUsuarioAutenticadoService usuarioAutenticadoService
@inject NotificationService notificationService

@inject HttpClient httpClient

<PageTitle>RussoCursos - Carrito de Compras</PageTitle>

<table class="table">
    <thead>
        <tr>
            <th>Nombre del Curso</th>
            <th>Fecha de Inicio</th>
            <th>Fecha de Fin</th>
            <th>Fecha de Compra</th>
            <th>Precio</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var compra in user.Carrito)
        {
            <tr>
                <td>@compra.NombreCurso</td>
                <td>@compra.FechaInicioCurso.ToString("dd/MM/yyyy")</td>
                <td>@compra.FechaFinCurso.ToString("dd/MM/yyyy")</td>
                <td>@compra.Fecha.ToString("dd/MM/yyyy")</td>
                <td>@compra.PrecioCurso</td>
                <td>
                    <button class="btn btn-danger" @onclick="() => EliminarDelCarrito(compra.CompraId)">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {

    [Parameter]
    public int CompraId { get; set; }
    public Usuarios user { get; set; }

    public List<Carrito> carritoItems = new List<Carrito>(); 

    private async Task EliminarDelCarrito(int compraId)
    {
        var compra = user.Carrito.FirstOrDefault(c => c.CompraId == compraId);
        if (compra == null)
        {
            notificationService.ShowNotification(
                titulo: "Error",
                mensaje: "La compra no existe en el carrito",
                NotificationSeverity.Error
            );
            return;
        }

        var response = await httpClient.DeleteAsync($"api/Compras/{compraId}");
        if (response.IsSuccessStatusCode)
        {
            user.Carrito.Remove(compra);  
            notificationService.ShowNotification(
                titulo: "Éxito",
                mensaje: "El curso se eliminó del carrito",
                NotificationSeverity.Success
            );
        }
        else
        {
            notificationService.ShowNotification(
                titulo: "Error",
                mensaje: "No se pudo eliminar el curso del carrito",
                NotificationSeverity.Error
            );
        }
    }

}
