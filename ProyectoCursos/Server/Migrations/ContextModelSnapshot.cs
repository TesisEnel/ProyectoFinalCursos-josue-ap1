// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoCursos.Server.DAL;

#nullable disable

namespace ProyectoCursos.Server.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("ProyectoCursos.Shared.Cursos", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaBaja")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreCurso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Programa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RutaImagen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("ProyectoCursos.Shared.CursosDetalle", b =>
                {
                    b.Property<int>("CursosDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CursosDetalleId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CursosDetalle");
                });

            modelBuilder.Entity("ProyectoCursos.Shared.Precios", b =>
                {
                    b.Property<int>("PrecioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("REAL");

                    b.HasKey("PrecioId");

                    b.ToTable("Precios");
                });

            modelBuilder.Entity("ProyectoCursos.Shared.PreciosDetalle", b =>
                {
                    b.Property<int>("PreciosDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreciosPrecioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PreciosDetalleId");

                    b.HasIndex("CursoId");

                    b.HasIndex("PreciosPrecioId");

                    b.ToTable("PreciosDetalle");
                });

            modelBuilder.Entity("ProyectoCursos.Shared.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoCursos.Shared.CursosDetalle", b =>
                {
                    b.HasOne("ProyectoCursos.Shared.Usuarios", null)
                        .WithMany("CursosDetalle")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoCursos.Shared.PreciosDetalle", b =>
                {
                    b.HasOne("ProyectoCursos.Shared.Cursos", null)
                        .WithMany("PreciosDetalle")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCursos.Shared.Precios", "Precios")
                        .WithMany()
                        .HasForeignKey("PreciosPrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Precios");
                });

            modelBuilder.Entity("ProyectoCursos.Shared.Cursos", b =>
                {
                    b.Navigation("PreciosDetalle");
                });

            modelBuilder.Entity("ProyectoCursos.Shared.Usuarios", b =>
                {
                    b.Navigation("CursosDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
